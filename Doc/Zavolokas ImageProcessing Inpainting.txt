
Install-Package Zavolokas.Inpainting


using Zavolokas.Inpainting;

private static void InpaintFrames(string inputDir, string outputDir, int startX, int startY, int width, int height)
{
    if (!System.IO.Directory.Exists(outputDir))
        System.IO.Directory.CreateDirectory(outputDir);

    var files = System.IO.Directory.GetFiles(inputDir, "frame_*.png");
    
    foreach (var file in files)
    {
        // Read the image
        using (var bitmap = new Bitmap(file))
        {
            var imageArgb = bitmap.ToArgbBytes();
            var maskArgb = CreateMask(imageArgb.Width, imageArgb.Height, startX, startY, width, height);
            var donors = new Mask(maskArgb).Dilate().GetPoints();

            // Inpaint the image
            var inpainter = new Inpainter();
            var result = inpainter.Inpaint(imageArgb, maskArgb, donors);
            
            // Save the result
            var resultBitmap = result.FromArgbToBitmap();
            string outputFilePath = System.IO.Path.Combine(outputDir, System.IO.Path.GetFileName(file));
            resultBitmap.Save(outputFilePath, System.Drawing.Imaging.ImageFormat.Png);
        }
    }
}

private static byte[] CreateMask(int imageWidth, int imageHeight, int startX, int startY, int width, int height)
{
    var mask = new byte[imageWidth * imageHeight];
    for (int y = startY; y < startY + height; y++)
    {
        for (int x = startX; x < startX + width; x++)
        {
            mask[y * imageWidth + x] = 255; // Mark the rectangular area
        }
    }
    return mask;
}
